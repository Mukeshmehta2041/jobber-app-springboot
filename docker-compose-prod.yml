version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: jobber-postgres-prod
    environment:
      POSTGRES_DB: jobber_prod
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - jobber-network-prod
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    container_name: jobber-eureka-prod
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - jobber-network-prod
    depends_on:
      - postgres
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: jobber-config-server-prod
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - jobber-network-prod
    depends_on:
      - postgres
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: jobber-auth-service-prod
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JWT_SECRET: ${JWT_SECRET}
      JAVA_TOOL_OPTIONS: "-Xms512m -Xmx1024m"
    networks:
      - jobber-network-prod
    depends_on:
      - config-server
      - eureka
    restart: always
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: jobber-user-service-prod
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_TOOL_OPTIONS: "-Xms512m -Xmx1024m"
    networks:
      - jobber-network-prod
    depends_on:
      - config-server
      - eureka
    restart: always
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: jobber-api-gateway-prod
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_TOOL_OPTIONS: "-Xms512m -Xmx1024m"
    networks:
      - jobber-network-prod
    depends_on:
      - config-server
      - eureka
    restart: always
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  jobber-network-prod:
    driver: bridge

volumes:
  postgres_data_prod:
