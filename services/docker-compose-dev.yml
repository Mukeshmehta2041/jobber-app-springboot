version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    container_name: jobber-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-jobber_auth}
      POSTGRES_USER: ${POSTGRES_USER:-jobber}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-jobber123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-jobber}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jobber-network

  mongodb:
    image: mongo:7-jammy
    container_name: jobber-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-rootpassword}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-jobber_users}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jobber-network

  redis:
    image: redis:7-alpine
    container_name: jobber-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jobber-network

  # Spring Cloud Services
  config-server:
    build:
      context: ..
      dockerfile: services/config-server/Dockerfile
    container_name: jobber-config-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: ${CONFIG_GIT_URI:-https://github.com/your-org/jobber-config.git}
      SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL: ${CONFIG_GIT_BRANCH:-main}
      SPRING_SECURITY_USER_NAME: ${CONFIG_SERVER_USERNAME:-configuser}
      SPRING_SECURITY_USER_PASSWORD: ${CONFIG_SERVER_PASSWORD:-configpass}
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-registry:8761/eureka/
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - jobber-network

  service-registry:
    build:
      context: ..
      dockerfile: services/service-registry/Dockerfile
    container_name: jobber-service-registry
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_USERNAME: ${CONFIG_SERVER_USERNAME:-configuser}
      SPRING_CLOUD_CONFIG_PASSWORD: ${CONFIG_SERVER_PASSWORD:-configpass}
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: false
      EUREKA_CLIENT_FETCH_REGISTRY: false
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://localhost:8761/eureka/
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - jobber-network

  # Business Services
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: jobber-auth-service
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_USERNAME: ${CONFIG_SERVER_USERNAME:-configuser}
      SPRING_CLOUD_CONFIG_PASSWORD: ${CONFIG_SERVER_PASSWORD:-configpass}
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-registry:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-jobber_auth}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-jobber}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-jobber123}
      JWT_SECRET: ${JWT_SECRET:-yourJwtSecretKeyThatShouldBeVeryLongAndSecure}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    networks:
      - jobber-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: jobber-user-service
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_USERNAME: ${CONFIG_SERVER_USERNAME:-configuser}
      SPRING_CLOUD_CONFIG_PASSWORD: ${CONFIG_SERVER_PASSWORD:-configpass}
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-registry:8761/eureka/
      SPRING_DATA_MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-root}:${MONGO_ROOT_PASSWORD:-rootpassword}@mongodb:27017/${MONGO_DB:-jobber_users}?authSource=admin
    ports:
      - "8082:8082"
    depends_on:
      mongodb:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    networks:
      - jobber-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: jobber-api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_USERNAME: ${CONFIG_SERVER_USERNAME:-configuser}
      SPRING_CLOUD_CONFIG_PASSWORD: ${CONFIG_SERVER_PASSWORD:-configpass}
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-registry:8761/eureka/
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    networks:
      - jobber-network

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  jobber-network:
    driver: bridge